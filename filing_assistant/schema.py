from typing import List, Dict

CONTROLLED_VOCAB: Dict[str, List[str]] = {
    "lot_id": ["lot id"],
    "mode": ["mode"],
    "lane_id": ["lane id"],
    "valid_from": ["valid from", "rate validity: valid from date"],
    "valid_to": ["valid to", "rate validity: valid to date"],
    "origin_country": ["origin country"],
    "origin_state": ["origin state"],
    "origin_city": ["origin city"],
    "port_of_loading": ["port of loading"],
    "alt_port_of_loading": ["alternate port of loading"],
    "admin_region": ["administration region", "package name"],
    "destination_country": ["destination country"],
    "destination_state": ["destination state"],
    "port_of_discharge": ["port of discharge"],
    "destination_city": ["destination city"],
    "delivery_term": ["delivery term"],
    "service": ["service"],
    "transit_time_total_days": ["transit time - total (days)*", "total transit time"],
    "carrier_choice": ["carrier choice*"],
    "days_of_departure": ["days of departure*"],
    "currency": ["currency"],
    "uom": ["uom"],
    "min_charge_usd": ["min charge (usd)*"],
    "all_in_charge_usd": ["all in charge (usd)*", "all-in charge (usd)*"],
    "origin_haulage_usd": ["origin haulage (door to airport) charges (usd)*"],
    "othc_usd": ["origin terminal handling charges (othc) (usd)*"],
    "freight_ataa_usd": ["freight (airport to airport) charges (usd)*"],
    "dthc_usd": ["destination terminal handling charges (dthc) (usd)*"],
    "destination_haulage_usd": ["destination haulage charges (door to airport) (usd)*"],
    "routing": ["routing*"],
    "tier1_addon_usd": ["tier 1 add-on cost (usd)*"],
    "tier2_addon_usd": ["tier 2 add-on cost (usd)*"],
    "tier3_addon_usd": ["tier 3 add-on cost (usd)*"],
    "comment": ["comment"],
    "transit_time_origin_days": ["transit time - origin (days)*"],
    "transit_time_ptp_days": ["transit time - ptp (days)*"],
    "transit_time_destination_days": ["transit time - destination (days)*"],
}

def normalize(s: str) -> str:
    return " ".join(s.strip().lower().replace("\n"," ").split())
